AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'QA on AWS - Simple PDF processing with Step Functions'

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name

Resources:
  # S3 Trigger Lambda: Start Step Function on PDF upload
  TriggerStepFunctionLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'qa-on-aws-${Environment}-trigger-step-function'
      CodeUri: lambdas/
      Handler: trigger_step_function.lambda_handler
      Runtime: python3.11
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          STEP_FUNCTION_ARN: !Ref RAGProcessingStateMachine
      Policies:
        - Statement:
          - Sid: StartStepFunction
            Effect: Allow
            Action:
              - states:StartExecution
            Resource: !Ref RAGProcessingStateMachine

  # Lambda 1: Extract Text from PDF
  ExtractTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'qa-on-aws-${Environment}-extract-text'
      CodeUri: lambdas/
      Handler: extract_text.lambda_handler
      Runtime: python3.11
      Timeout: 300
      MemorySize: 1024
      Environment:
        Variables:
          BUCKET_NAME: source-pdf-qa-aws
      Policies:
        - S3ReadPolicy:
            BucketName: source-pdf-qa-aws

  # Lambda 2: Generate Embeddings
  GenerateEmbeddingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'qa-on-aws-${Environment}-generate-embeddings'
      CodeUri: lambdas/
      Handler: generate_embeddings.lambda_handler
      Runtime: python3.11
      Timeout: 900
      MemorySize: 1024
      Policies:
        - Statement:
          - Sid: BedrockInvokeModel
            Effect: Allow
            Action:
              - bedrock:InvokeModel
            Resource:
              - arn:aws:bedrock:*::foundation-model/amazon.titan-embed-text-v1

  # Lambda 3: Index to OpenSearch
  IndexOpenSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'qa-on-aws-${Environment}-index-opensearch'
      CodeUri: lambdas/
      Handler: index_opensearch.lambda_handler
      Runtime: python3.11
      Timeout: 300
      MemorySize: 512
      Policies:
        - Statement:
          - Sid: OpenSearchAccess
            Effect: Allow
            Action:
              - es:ESHttpPost
              - es:ESHttpPut
              - aoss:APIAccessAll
            Resource: "*"

  # Lambda 4: Update Metadata
  UpdateMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'qa-on-aws-${Environment}-update-metadata'
      CodeUri: lambdas/
      Handler: update_metadata.lambda_handler
      Runtime: python3.11
      Timeout: 60
      MemorySize: 256
      Policies:
        - Statement:
          - Sid: DynamoDBAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:GetItem
            Resource: "*"

  # Step Functions State Machine - RAG Pipeline
  RAGProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub 'qa-on-aws-${Environment}-rag-pipeline'
      DefinitionUri: state_machines/processing.json
      DefinitionSubstitutions:
        ExtractTextFunctionArn: !GetAtt ExtractTextFunction.Arn
        GenerateEmbeddingsFunctionArn: !GetAtt GenerateEmbeddingsFunction.Arn
        IndexOpenSearchFunctionArn: !GetAtt IndexOpenSearchFunction.Arn
        UpdateMetadataFunctionArn: !GetAtt UpdateMetadataFunction.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref ExtractTextFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateEmbeddingsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IndexOpenSearchFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UpdateMetadataFunction

Outputs:
  BucketName:
    Value: source-pdf-qa-aws
  RAGStateMachineArn:
    Value: !Ref RAGProcessingStateMachine
  TriggerLambdaArn:
    Value: !GetAtt TriggerStepFunctionLambda.Arn
    Description: "Configure this Lambda as S3 event trigger manually"
  ExtractTextLambdaArn:
    Value: !GetAtt ExtractTextFunction.Arn
  GenerateEmbeddingsLambdaArn:
    Value: !GetAtt GenerateEmbeddingsFunction.Arn
  IndexOpenSearchLambdaArn:
    Value: !GetAtt IndexOpenSearchFunction.Arn
  UpdateMetadataLambdaArn:
    Value: !GetAtt UpdateMetadataFunction.Arn
  ManualS3Configuration:
    Value: "After deployment, configure S3 bucket 'source-pdf-qa-aws' to trigger TriggerStepFunctionLambda on uploads/*.pdf"
    Description: "S3 Event Configuration Required"